<<<<<<< Updated upstream
from django.contrib.auth.forms import AuthenticationForm, PasswordChangeForm
from django.core.exceptions import ValidationError
=======
from django import forms
from django.contrib.auth.forms import AuthenticationForm, PasswordChangeForm
>>>>>>> Stashed changes
from django.utils.translation import gettext_lazy as _


class AdminAuthenticationForm(AuthenticationForm):
    """
    A custom authentication form used in the admin app.
    """
<<<<<<< Updated upstream

    error_messages = {
        **AuthenticationForm.error_messages,
        "invalid_login": _(
=======
    error_messages = {
        **AuthenticationForm.error_messages,
        'invalid_login': _(
>>>>>>> Stashed changes
            "Please enter the correct %(username)s and password for a staff "
            "account. Note that both fields may be case-sensitive."
        ),
    }
<<<<<<< Updated upstream
    required_css_class = "required"
=======
    required_css_class = 'required'
>>>>>>> Stashed changes

    def confirm_login_allowed(self, user):
        super().confirm_login_allowed(user)
        if not user.is_staff:
<<<<<<< Updated upstream
            raise ValidationError(
                self.error_messages["invalid_login"],
                code="invalid_login",
                params={"username": self.username_field.verbose_name},
=======
            raise forms.ValidationError(
                self.error_messages['invalid_login'],
                code='invalid_login',
                params={'username': self.username_field.verbose_name}
>>>>>>> Stashed changes
            )


class AdminPasswordChangeForm(PasswordChangeForm):
<<<<<<< Updated upstream
    required_css_class = "required"
=======
    required_css_class = 'required'
>>>>>>> Stashed changes
