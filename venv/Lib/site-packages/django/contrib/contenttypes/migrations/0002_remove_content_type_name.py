from django.db import migrations, models


def add_legacy_name(apps, schema_editor):
<<<<<<< Updated upstream
    alias = schema_editor.connection.alias
    ContentType = apps.get_model("contenttypes", "ContentType")
    for ct in ContentType.objects.using(alias):
=======
    ContentType = apps.get_model('contenttypes', 'ContentType')
    for ct in ContentType.objects.all():
>>>>>>> Stashed changes
        try:
            ct.name = apps.get_model(ct.app_label, ct.model)._meta.object_name
        except LookupError:
            ct.name = ct.model
        ct.save()


class Migration(migrations.Migration):
<<<<<<< Updated upstream
    dependencies = [
        ("contenttypes", "0001_initial"),
=======

    dependencies = [
        ('contenttypes', '0001_initial'),
>>>>>>> Stashed changes
    ]

    operations = [
        migrations.AlterModelOptions(
<<<<<<< Updated upstream
            name="contenttype",
            options={
                "verbose_name": "content type",
                "verbose_name_plural": "content types",
            },
        ),
        migrations.AlterField(
            model_name="contenttype",
            name="name",
=======
            name='contenttype',
            options={'verbose_name': 'content type', 'verbose_name_plural': 'content types'},
        ),
        migrations.AlterField(
            model_name='contenttype',
            name='name',
>>>>>>> Stashed changes
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.RunPython(
            migrations.RunPython.noop,
            add_legacy_name,
<<<<<<< Updated upstream
            hints={"model_name": "contenttype"},
        ),
        migrations.RemoveField(
            model_name="contenttype",
            name="name",
=======
            hints={'model_name': 'contenttype'},
        ),
        migrations.RemoveField(
            model_name='contenttype',
            name='name',
>>>>>>> Stashed changes
        ),
    ]
